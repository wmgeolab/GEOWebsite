@use "sass:color";
@use "sass:math";
@use "../libs/breakpoints";
@use "../libs/functions";
@use "../libs/mixins";
@use "../libs/vendor";

///
/// Editorial by HTML5 UP
/// html5up.net | @ajlkn
/// Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)
///

/* Sidebar */

	#search {
		form {
			@include mixins.icon(false, solid);
			position: relative;

			&:before {
				@include vendor.vendor('transform', 'scaleX(-1)');
				color: functions.palette(fg);
				content: '\f002';
				cursor: default;
				display: block;
				font-size: 1.5em;
				height: math.div(functions.size(element-height), 1.375);
				line-height: math.div(functions.size(element-height), 1.375);
				opacity: 0.325;
				position: absolute;
				right: 0;
				text-align: center;
				top: 0;
				width: math.div(functions.size(element-height), 1.375);
			}

			input[type="text"] {
				padding-right: functions.size(element-height);
			}
		}
	}

	#sidebar {
		$pad: math.div(2em, 0.9);

		@include vendor.vendor('flex-grow', '0');
		@include vendor.vendor('flex-shrink', '0');
		@include vendor.vendor('transition', (
			'margin-left 0.5s ease',
			'box-shadow 0.5s ease'
		));
		background-color: functions.palette(bg-alt);
		font-size: 0.9em;
		position: relative;
		width: functions.size(sidebar-width);

		h2 {
			font-size: math.div(1.25em, 0.9);
		}

		> .inner {
			@include mixins.padding($pad, $pad, (0, 0, $pad, 0));
			position: relative;
			width: functions.size(sidebar-width);

			> * {
				border-bottom: solid 2px functions.palette(border);
				margin: 0 0 (functions.size(element-margin) * 1.75) 0;
				padding: 0 0 (functions.size(element-margin) * 1.75) 0;

				> :last-child {
					margin-bottom: 0;
				}

				&:last-child {
					border-bottom: 0;
					margin-bottom: 0;
					padding-bottom: 0;
				}
			}

			> .alt {
				background-color: color.adjust(functions.palette(bg-alt), $lightness: -2%);
				border-bottom: 0;
				margin: ($pad * -1) 0 ($pad * 2) ($pad * -1);
				padding: $pad;
				width: calc(100% + #{$pad * 2});
			}
		}

		.toggle {
			@include mixins.icon(false, solid);
			@include vendor.vendor('transition', 'left 0.5s ease');
			-webkit-tap-highlight-color: rgba(255,255,255,0);
			border: 0;
			display: block;
			height: 7.5em;
			left: functions.size(sidebar-width);
			line-height: 7.5em;
			outline: 0;
			overflow: hidden;
			position: absolute;
			text-align: center;
			text-indent: -15em;
			white-space: nowrap;
			top: 0;
			width: 6em;
			z-index: functions.misc(z-index-base);

			&:before {
				content: '\f0c9';
				font-size: 2rem;
				height: inherit;
				left: 0;
				line-height: inherit;
				position: absolute;
				text-indent: 0;
				top: 0;
				width: inherit;
			}
		}

		&.inactive {
			margin-left: (functions.size(sidebar-width) * -1);
		}

		@include breakpoints.breakpoint('<=xlarge') {
			$pad: math.div(1.5em, 0.9);

			width: functions.size(sidebar-width-alt);

			> .inner {
				@include mixins.padding($pad, $pad, (0, 0, $pad, 0));
				width: functions.size(sidebar-width-alt);

				> .alt {
					margin: ($pad * -1) 0 ($pad * 2) ($pad * -1);
					padding: $pad;
					width: calc(100% + #{$pad * 2});
				}
			}

			.toggle {
				height: 6.25em;
				left: functions.size(sidebar-width-alt);
				line-height: 6.25em;
				text-indent: 5em;
				width: 5em;

				&:before {
					font-size: 1.5rem;
				}
			}

			&.inactive {
				margin-left: (functions.size(sidebar-width-alt) * -1);
			}
		}

		@include breakpoints.breakpoint('<=large') {
			box-shadow: 0 0 5em 0 rgba(0, 0, 0, 0.175);
			height: 100%;
			left: 0;
			position: fixed;
			top: 0;
			z-index: functions.misc(z-index-base);

			&.inactive {
				box-shadow: none;
			}

			> .inner {
				-webkit-overflow-scrolling: touch;
				height: 100%;
				left: 0;
				overflow-x: hidden;
				overflow-y: auto;
				position: absolute;
				top: 0;

				&:after {
					content: '';
					display: block;
					height: 4em;
					width: 100%;
				}
			}

			.toggle {
				text-indent: 6em;
				width: 6em;

				&:before {
					font-size: 1.5rem;
					margin-left: (-0.875em * 0.5);
				}
			}

			body.is-preload & {
				display: none;
			}
		}

		@include breakpoints.breakpoint('<=small') {
			.toggle {
				text-indent: 7.25em;
				width: 7.25em;

				&:before {
					color: functions.palette(fg);
					margin-left: (-0.125em * 0.5);
					margin-top: (-0.5em * 0.5);
					font-size: 1.1rem;
					z-index: 1;
				}

				&:after {
					background: color.adjust(color.adjust(functions.palette(fg), $lightness: 35%), $alpha: -0.25);
					border-radius: functions.size(border-radius);
					content: '';
					height: 3.5em;
					left: 1em;
					position: absolute;
					top: 1em;
					width: 5em;
				}
			}
		}
	}